import finalprojectfop.gfx.ImageLoader;
import javax.imageio.ImageIO;
import java.io.IOException;
import javax.swing.JPanel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.util.Random;
import javax.swing.Timer;

public class ArmouredTitan extends JPanel {
    private weapon wallweapon = new weapon();
    //x-coordinate
    private int titanImagexpos = 0;
    //y-coordinate
    private int [] titanImageypos = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};

    private Random random = new Random();
    
    private int xpos=0;
    private int ypos;

    private Image titanImage;
    private int hpTitan = 100;
    private int hour = 0;
    private Timer timer;
    private int delay = 1000; //1 hour = 1 sec = 1000 milliseconds (can change)

    public ArmouredTitan(){

    ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    hour = hour + 1;
                    
                  if (xpos == 0) {
                //to appear after 5 hours and after player's turn
                if (Hour.getHour() >= 5 && (Hour.getHour() % 2 != 0)) {
                    xpos++;
                }

                if (Hour.getHour() >= 5 && (Hour.getHour() % 2 != 0)) {
                    ypos = random.nextInt(9);

                    if (hpTitan <= 0) {
                        gettitanDieImage();
                    } else {
                        gettitanImage();
                    }
                } else {
                    //player code
                }
            }else if(xpos!=9){
                if (Hour.getHour() >= 5 && (Hour.getHour() % 2 != 0)) {
                    xpos++;
                }

                if (Hour.getHour() >= 5 && (Hour.getHour() % 2 != 0)) {
                    int forRandom = random.nextInt(2);
                    if(forRandom == 0)ypos ++;
                    if(forRandom == 1)ypos --;

                    if (hpTitan <= 0) {
                        gettitanDieImage();
                    } else {
                        gettitanImage();
                    }
                }
                else if(xpos == 9){
                     if (Hour.getHour() >= 5 && (Hour.getHour() % 2 != 0)) {
                    int forRandom = random.nextInt(2);
                    if(forRandom == 0)ypos ++;
                    if(forRandom == 1)ypos --;

                    if (hpTitan <= 0) {
                        gettitanDieImage();
                    } else {
                        gettitanImage();
                    }
                }else {
                    //player code
                }
                }
        };

        timer = new Timer(delay, taskPerformer);
        timer.start();
    }
    

    //display image
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.drawImage(titanImage, xpos*50, ypos*50, ArmouredTitan.this);
    }
    
    private static Image gettitanImage() {
        Image image = null;
        try {
            image = ImageIO.read(ArmouredTitan.class.getResource("Images/ArmouredTitan.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        return image;
    }

    private static Image gettitanDieImage() {
        Image image = null;
        try {
            image = ImageIO.read(ArmouredTitan.class.getResource("Images/ArmouredTitanDie.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        return image;
    }
}
